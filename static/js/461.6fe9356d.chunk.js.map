{"version":3,"file":"static/js/461.6fe9356d.chunk.js","mappings":"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","sources":["Api.jsx","components/styledComponents/AboutMovie.styled.js","components/AboutMovie.jsx","components/styledComponents/BackLink.styled.js","components/BackLink.jsx","pages/StyledPages/MoveDetails.styled.js","pages/MovieDetails.jsx","pages/StyledPages/Home.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '38f6f2c88436f6a6fb5d137cfc7b2688';\nconst BASE_URL = 'api.themoviedb.org/3/';\n\nexport const GetTrendingMovies = async () => {\n  const response = await axios.get(\n    `https://${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nexport const MovieById = async id => {\n  const response = await axios.get(\n    `https://${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response;\n};\n\n// export const GetMoviesByQuery = async (page, query) => {\n//   const response = await axios.get(\n//     `https://${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=${page}&include_adult=false&query=${query}`\n//   );\n//   return response;\n// };\n\nexport const GetMoviesByQuery = async query => {\n  const response = await axios.get(\n    `https://${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&include_adult=false&query=${query}`\n  );\n  return response;\n};\n\nexport const GetMovieCast = async id => {\n  const response = await axios.get(\n    `https://${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const GetMovieReview = async id => {\n  const response = await axios.get(\n    `https://${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n","import styled from 'styled-components';\n\nexport const CardContainer = styled.div`\n  display: flex;\n  padding-left: 32px;\n  padding-right: 32px;\n  padding-bottom: 16px;\n`;\n\nexport const MovieImg = styled.img`\n  display: block;\n  width: 300px;\n  object-fit: cover;\n`;\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding-left: 32px;\n`;\nexport const Title = styled.h2`\n  color: ${p => p.theme.colors.title};\n`;\n\nexport const SubTitle = styled.h3`\n  margin-top: 16px;\n  margin-bottom: 0;\n  color: ${p => p.theme.colors.title};\n`;\nexport const GenresList = styled.ul`\n  margin: 0;\n  padding-left: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-top: 16px;\n  list-style: none;\n`;\n\nexport const Vote = styled.span`\n  color: ${p => p.theme.colors.title};\n`;\nexport const Text = styled.p`\n  text-indent: 0;\n  display: inline-block;\n`;\n","import {\n  CardContainer,\n  Info,\n  Title,\n  SubTitle,\n  MovieImg,\n  GenresList,\n  Vote,\n  Text,\n} from 'components/styledComponents/AboutMovie.styled';\nimport ImgNotFound from '../Images/—Pngtree—image of video camera vector_5274660.png';\n\nexport const AboutMovie = ({\n  id,\n  poster,\n  title,\n  date,\n  vote,\n  overview,\n  genres,\n}) => {\n  return (\n    <CardContainer key={id}>\n      <MovieImg\n        src={poster ? `https://image.tmdb.org/t/p/w500/${poster}` : ImgNotFound}\n        alt={title}\n      ></MovieImg>\n\n      <Info>\n        <Title>\n          {title}( {date})\n        </Title>\n        <Vote>\n          Vote: <span style={{ color: 'black' }}>{vote}</span>\n        </Vote>\n        <SubTitle>Overview</SubTitle>\n        <Text> {overview}</Text>\n        <SubTitle>Genres </SubTitle>\n        <GenresList>\n          {genres.map(genre => (\n            <li key={genre.id}>{genre.name}</li>\n          ))}\n        </GenresList>\n        ;\n      </Info>\n    </CardContainer>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  margin-left: 36px;\n  color: blue;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from 'components/styledComponents/BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\n\nexport const AboutMovieContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const MovieDetailsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`;\nexport const InfoSection = styled.section`\n  border-bottom: 1px solid black;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\nexport const InformationList = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  padding-top: 16px;\n`;\n\nexport const InformationItem = styled.li`\n  margin-bottom: 10px;\n`;\nexport const AdditionalSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  padding-left: 32px;\n  border-bottom: 1px solid black;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nexport const Title = styled.h2`\n  color: ${p => p.theme.colors.title};\n  display: inline-block;\n  margin: 0;\n  padding: 0;\n`;\nexport const Section = styled.section`\n  background-color: lightblue;\n`;\n","import React, { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useParams, Link, useLocation } from 'react-router-dom';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { MovieById } from '../Api';\n\nimport { Loading, ErrorMessage } from './StyledPages/Home.styled';\nimport { AboutMovie } from 'components/AboutMovie';\nimport { BackLink } from 'components/BackLink';\nimport {\n  AboutMovieContainer,\n  InformationList,\n  InformationItem,\n  MovieDetailsContainer,\n  InfoSection,\n  AdditionalSection,\n  Title,\n} from 'pages/StyledPages/MoveDetails.styled';\n\nconst MovieDetails = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const location = useLocation();\n  const { id } = useParams();\n  const backLinkHref = location.state?.from ?? '/movies';\n  console.log(location);\n  useEffect(() => {\n    const loadMovies = async () => {\n      try {\n        setLoading(true);\n        setMovies([]);\n        const response = await MovieById(id);\n        const moviesById = response.data;\n        setMovies([moviesById]);\n\n        setError('');\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadMovies();\n    return () => {};\n  }, [id]);\n  return (\n    <main>\n      {loading && (\n        <Loading>\n          <RotatingLines strokeColor=\"blue\" />\n        </Loading>\n      )}\n      <AboutMovieContainer>\n        <BackLink to={backLinkHref}>Go back</BackLink>\n        <MovieDetailsContainer>\n          <InfoSection>\n            {movies &&\n              movies.map(movie => (\n                <AboutMovie\n                  key={movie.id}\n                  id={movie.id}\n                  poster={movie.poster_path}\n                  title={movie.original_title}\n                  vote={movie.vote_average}\n                  date={movie.release_date.split('-')[0]}\n                  overview={movie.overview}\n                  genres={movie.genres}\n                />\n              ))}\n          </InfoSection>\n          <AdditionalSection>\n            <Title>Additional Information</Title>\n            <InformationList>\n              <InformationItem>\n                <Link to=\"cast\" state={{ from: location.state?.from }}>\n                  Cast\n                </Link>\n              </InformationItem>\n              <InformationItem>\n                <Link to=\"reviews\" state={{ from: location.state?.from }}>\n                  Reviews\n                </Link>\n              </InformationItem>\n            </InformationList>\n          </AdditionalSection>\n        </MovieDetailsContainer>\n      </AboutMovieContainer>\n      {error && movies.length !== 0 && (\n        <ErrorMessage>Error while loading data. Try again later.</ErrorMessage>\n      )}\n      <Suspense fallback={<div>Loading page...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import styled from 'styled-components';\n\nexport const Loading = styled.div`\n  margin: 0, auto;\n`;\nexport const HomeTitle = styled.h1`\n  color: ${p => p.theme.colors.title};\n`;\nexport const ErrorMessage = styled.h2`\n  color: ${p => p.theme.colors.error};\n`;\n"],"names":["API_KEY","BASE_URL","GetTrendingMovies","axios","response","MovieById","id","GetMoviesByQuery","query","GetMovieCast","GetMovieReview","CardContainer","styled","MovieImg","Info","Title","p","theme","colors","title","SubTitle","GenresList","Vote","Text","AboutMovie","poster","date","vote","overview","genres","src","ImgNotFound","alt","style","color","map","genre","name","StyledLink","Link","BackLink","to","children","size","AboutMovieContainer","MovieDetailsContainer","InfoSection","InformationList","InformationItem","AdditionalSection","useState","movies","setMovies","loading","setLoading","error","setError","location","useLocation","useParams","backLinkHref","state","from","console","log","useEffect","loadMovies","moviesById","data","strokeColor","movie","poster_path","original_title","vote_average","release_date","split","length","Suspense","fallback","Loading","HomeTitle","ErrorMessage"],"sourceRoot":""}