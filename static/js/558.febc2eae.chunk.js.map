{"version":3,"file":"static/js/558.febc2eae.chunk.js","mappings":"mTAEMA,EAAU,mCACVC,EAAW,wBAEJC,EAAiB,mCAAG,oGACRC,EAAAA,EAAAA,IAAA,kBACVF,EADU,sCAC4BD,IAFpB,cACzBI,EADyB,yBAIxBA,GAJwB,2CAAH,qDAOjBC,EAAS,mCAAG,WAAMC,GAAN,uFACAH,EAAAA,EAAAA,IAAA,kBACVF,EADU,iBACOK,EADP,oBACqBN,EADrB,oBADA,cACjBI,EADiB,yBAKhBA,GALgB,2CAAH,sDAeTG,EAAgB,mCAAG,WAAMC,GAAN,uFACPL,EAAAA,EAAAA,IAAA,kBACVF,EADU,gCACsBD,EADtB,qDAC0EQ,IAFnE,cACxBJ,EADwB,yBAIvBA,GAJuB,2CAAH,sDAOhBK,EAAY,mCAAG,WAAMH,GAAN,uFACHH,EAAAA,EAAAA,IAAA,kBACVF,EADU,iBACOK,EADP,4BAC6BN,EAD7B,oBADG,cACpBI,EADoB,yBAInBA,GAJmB,2CAAH,sDAOZM,EAAc,mCAAG,WAAMJ,GAAN,uFACLH,EAAAA,EAAAA,IAAA,kBACVF,EADU,iBACOK,EADP,4BAC6BN,EAD7B,oBADK,cACtBI,EADsB,yBAIrBA,GAJqB,2CAAH,qD,gMCvCdO,EAAWC,EAAAA,GAAAA,GAAH,mJAOjB,IAMSC,EAAWD,EAAAA,GAAAA,GAAH,uQAYI,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,WAAWC,UAA9B,IAEbC,EAAcP,EAAAA,GAAAA,IAAH,mFAMXQ,EAAcR,EAAAA,GAAAA,IAAH,yPAWXS,EAAOT,EAAAA,GAAAA,KAAH,4DACN,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOM,KAAnB,IACK,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,IAAxB,IAELC,EAAYb,EAAAA,GAAAA,KAAH,4DACX,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOM,KAAnB,IACK,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,YAAYG,MAAxB,I,mBC3CLC,EAAW,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACxC,OACE,UAACV,EAAD,YACE,SAACD,EAAD,CACEY,IACEH,EAAO,0CAAsCA,GAAYI,EAE3DC,IAAKJ,KAEP,UAACR,EAAD,oBAAaQ,MACb,UAACR,EAAD,0BACa,SAACI,EAAD,UAAYK,SAI9B,E,UCwCD,EAxDa,WACX,OAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQlC,GAAOmC,EAAAA,EAAAA,MAAPnC,GAwBR,OAtBAoC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,sGAEfL,GAAW,GACXF,EAAS,IAHM,UAIQ3B,EAAAA,EAAAA,IAAaH,GAJrB,OAITF,EAJS,OAKTwC,EAAYxC,EAASyC,KAAKC,KAChCV,GAAS,OAAIQ,IAEbJ,EAAS,IARM,kDAUfA,EAAS,EAAD,IAVO,yBAYfF,GAAW,GAZI,6EAAH,qDAmBhB,OAJAS,YAAW,WACTC,OAAOC,SAAS,CAAEC,IAAK,IAAKC,SAAU,UACvC,GAAE,KACHR,IACO,WAAQ,CAChB,GAAE,CAACrC,KAEF,+BACG+B,IACC,SAAC,KAAD,WACE,SAAC,KAAD,CAAee,YAAY,YAG/B,SAACzC,EAAD,UACGwB,GACCA,EAAMkB,KAAI,SAAAP,GAAI,OACZ,SAACjC,EAAD,WACE,SAACc,EAAD,CACErB,GAAIwC,EAAKxC,GACTsB,QAASkB,EAAKQ,aACdzB,KAAMiB,EAAKjB,KACXC,UAAWgB,EAAKhB,aALLgB,EAAKxC,GADR,MAWjBiC,GAA0B,IAAjBJ,EAAMoB,SACd,SAAC,KAAD,2DAIP,C,qIC5DYC,EAAU5C,EAAAA,GAAAA,IAAH,4CAGP6C,EAAY7C,EAAAA,GAAAA,GAAH,uCACX,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAO0C,KAAnB,IAECC,EAAe/C,EAAAA,GAAAA,GAAH,uCACd,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOuB,KAAnB,G","sources":["Api.jsx","components/styledComponents/Cast.styled.js","components/CastCard.jsx","components/Cast.jsx","pages/StyledPages/Home.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '38f6f2c88436f6a6fb5d137cfc7b2688';\nconst BASE_URL = 'api.themoviedb.org/3/';\n\nexport const GetTrendingMovies = async () => {\n  const response = await axios.get(\n    `https://${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nexport const MovieById = async id => {\n  const response = await axios.get(\n    `https://${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response;\n};\n\n// export const GetMoviesByQuery = async (page, query) => {\n//   const response = await axios.get(\n//     `https://${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=${page}&include_adult=false&query=${query}`\n//   );\n//   return response;\n// };\n\nexport const GetMoviesByQuery = async query => {\n  const response = await axios.get(\n    `https://${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&include_adult=false&query=${query}`\n  );\n  return response;\n};\n\nexport const GetMovieCast = async id => {\n  const response = await axios.get(\n    `https://${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const GetMovieReview = async id => {\n  const response = await axios.get(\n    `https://${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  width: 100%;\n  height: auto;\n  ${\n    '' /* margin-top: -15px;\n  padding-top: 15px; */\n  }\n  padding: 20px;\n`;\n\nexport const CardItem = styled.li`\n  margin: 0;\n\n  list-style: none;\n  text-decoration: none;\n  color: black;\n  flex-basis: calc(100% / 5 - 15px);\n  border: 1px solid #eee;\n  margin-left: 15px;\n  margin-top: 15px;\n  border: none;\n\n  /* background-color: ${p => p.theme.colors.background.movieItems}; */\n`;\nexport const CastCardImg = styled.img`\n  display: block;\n  width: 100%;\n\n  object-fit: cover;\n`;\nexport const CardWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 250px;\n  height: 420px;\n  padding: 8px;\n  border: 1px solid black;\n  border-radius: 10px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\nexport const Span = styled.span`\n  color: ${p => p.theme.colors.black};\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\nexport const Character = styled.span`\n  color: ${p => p.theme.colors.black};\n  font-weight: ${p => p.theme.fontWeights.normal};\n`;\n","import {\n  CastCardImg,\n  CardWrapper,\n  Span,\n  Character,\n} from 'components/styledComponents/Cast.styled';\n\nimport ImgNotFound from '../Images/—Pngtree—image of video camera vector_5274660.png';\n\nexport const CastCard = ({ profile, name, character }) => {\n  return (\n    <CardWrapper>\n      <CastCardImg\n        src={\n          profile ? `https://image.tmdb.org/t/p/w500/${profile}` : ImgNotFound\n        }\n        alt={name}\n      />\n      <Span>Name: {name}</Span>\n      <Span>\n        Character: <Character>{character}</Character>\n      </Span>\n    </CardWrapper>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { GetMovieCast } from '../Api';\nimport { CastCard } from 'components/CastCard';\nimport { Loading, ErrorMessage } from 'pages/StyledPages/Home.styled';\nimport { CastList, CardItem } from 'components/styledComponents/Cast.styled';\n\nconst Cast = () => {\n  const [casts, setCasts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const loadMovies = async () => {\n      try {\n        setLoading(true);\n        setCasts([]);\n        const response = await GetMovieCast(id);\n        const movieCast = response.data.cast;\n        setCasts([...movieCast]);\n\n        setError('');\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    setTimeout(() => {\n      window.scrollTo({ top: 500, behavior: 'smooth' });\n    }, 500);\n    loadMovies();\n    return () => {};\n  }, [id]);\n  return (\n    <section>\n      {loading && (\n        <Loading>\n          <RotatingLines strokeColor=\"blue\" />\n        </Loading>\n      )}\n      <CastList>\n        {casts &&\n          casts.map(cast => (\n            <CardItem key={cast.id}>\n              <CastCard\n                id={cast.id}\n                profile={cast.profile_path}\n                name={cast.name}\n                character={cast.character}\n              />\n            </CardItem>\n          ))}\n      </CastList>\n      {error && casts.length !== 0 && (\n        <ErrorMessage>Error while loading data. Try again later.</ErrorMessage>\n      )}\n    </section>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const Loading = styled.div`\n  margin: 0, auto;\n`;\nexport const HomeTitle = styled.h1`\n  color: ${p => p.theme.colors.title};\n`;\nexport const ErrorMessage = styled.h2`\n  color: ${p => p.theme.colors.error};\n`;\n"],"names":["API_KEY","BASE_URL","GetTrendingMovies","axios","response","MovieById","id","GetMoviesByQuery","query","GetMovieCast","GetMovieReview","CastList","styled","CardItem","p","theme","colors","background","movieItems","CastCardImg","CardWrapper","Span","black","fontWeights","bold","Character","normal","CastCard","profile","name","character","src","ImgNotFound","alt","useState","casts","setCasts","loading","setLoading","error","setError","useParams","useEffect","loadMovies","movieCast","data","cast","setTimeout","window","scrollTo","top","behavior","strokeColor","map","profile_path","length","Loading","HomeTitle","title","ErrorMessage"],"sourceRoot":""}