{"version":3,"file":"static/js/415.d6c6eeb5.chunk.js","mappings":"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","sources":["Api.jsx","components/Moviecard.jsx","components/styledComponents/MoviesItem.syled.js","components/styledComponents/MoviesList.syled.js","pages/Home.jsx","pages/StyledPages/Home.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '38f6f2c88436f6a6fb5d137cfc7b2688';\nconst BASE_URL = 'api.themoviedb.org/3/';\n\nexport const GetTrendingMovies = async () => {\n  const response = await axios.get(\n    `https://${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nexport const MovieById = async id => {\n  const response = await axios.get(\n    `https://${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response;\n};\n\n// export const GetMoviesByQuery = async (page, query) => {\n//   const response = await axios.get(\n//     `https://${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=${page}&include_adult=false&query=${query}`\n//   );\n//   return response;\n// };\n\nexport const GetMoviesByQuery = async query => {\n  const response = await axios.get(\n    `https://${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&include_adult=false&query=${query}`\n  );\n  return response;\n};\n\nexport const GetMovieCast = async id => {\n  const response = await axios.get(\n    `https://${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const GetMovieReview = async id => {\n  const response = await axios.get(\n    `https://${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n","import ImgNotFound from '../Images/—Pngtree—image of video camera vector_5274660.png';\nimport { ItemImg } from './styledComponents/MoviesItem.syled';\n\nexport const MovieCard = ({ title, poster, releaseDate }) => {\n  return (\n    <>\n      <ItemImg\n        src={poster ? `https://image.tmdb.org/t/p/w500/${poster}` : ImgNotFound}\n        alt={title}\n      />\n      {title}({releaseDate ? releaseDate.split('-')[0] : ''})\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MoviesItem = styled.li`\n  margin: 0;\n\n  list-style: none;\n  text-decoration: none;\n  color: black;\n  flex-basis: calc(100% / 5 - 15px);\n  border: 1px solid #eee;\n  margin-left: 15px;\n  margin-top: 15px;\n  border: none;\n\n  /* background-color: ${p => p.theme.colors.background.movieItems}; */\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.05);\n  }\n`;\nexport const ItemImg = styled.img`\n  display: block;\n  width: 100%;\n\n  object-fit: cover;\n`;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  width: 100%;\n  height: auto;\n  padding: 20px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { GetTrendingMovies } from '../Api';\nimport { Loading, HomeTitle, ErrorMessage } from './StyledPages/Home.styled';\n\nimport { List } from 'components/styledComponents/MoviesList.syled';\nimport { MoviesItem } from 'components/styledComponents/MoviesItem.syled';\nimport { MovieCard } from 'components/Moviecard';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const location = useLocation();\n\n  useEffect(() => {\n    const loadMovies = async () => {\n      try {\n        setLoading(true);\n        setMovies([]);\n        const response = await GetTrendingMovies();\n        const trendingMovies = response.data.results;\n\n        setMovies([...trendingMovies]);\n\n        setError('');\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadMovies();\n    return () => {};\n  }, []);\n\n  return (\n    <main>\n      {loading && (\n        <Loading>\n          <RotatingLines strokeColor=\"blue\" />\n        </Loading>\n      )}\n      {movies.length > 0 && <HomeTitle>Trending Movies </HomeTitle>}\n      <List>\n        {movies &&\n          movies.map(movie => (\n            <MoviesItem key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                <MovieCard\n                  key={movie.id}\n                  title={movie.original_title}\n                  poster={movie.poster_path}\n                  releaseDate={movie.release_date}\n                  genres={movie.genres}\n                />\n              </Link>\n            </MoviesItem>\n          ))}\n      </List>\n      ;\n      {error && (\n        <ErrorMessage>Error while loading data. Try again later.</ErrorMessage>\n      )}\n    </main>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const Loading = styled.div`\n  margin: 0, auto;\n`;\nexport const HomeTitle = styled.h1`\n  color: ${p => p.theme.colors.title};\n`;\nexport const ErrorMessage = styled.h2`\n  color: ${p => p.theme.colors.error};\n`;\n"],"names":["API_KEY","BASE_URL","GetTrendingMovies","axios","response","MovieById","id","GetMoviesByQuery","query","GetMovieCast","GetMovieReview","MovieCard","title","poster","releaseDate","src","ImgNotFound","alt","split","MoviesItem","styled","p","theme","colors","background","movieItems","ItemImg","List","useState","movies","setMovies","loading","setLoading","error","setError","location","useLocation","useEffect","loadMovies","trendingMovies","data","results","strokeColor","length","map","movie","to","state","from","original_title","poster_path","release_date","genres","Loading","HomeTitle","ErrorMessage"],"sourceRoot":""}